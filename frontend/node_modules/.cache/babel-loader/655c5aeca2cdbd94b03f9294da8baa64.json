{"ast":null,"code":"var _jsxFileName = \"/Users/emilian.radu/Developer/meetup/frontend/src/components/Global/PrivateRoute.js\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nexport const PrivateRoute = ({\n  component: Component,\n  redirectTo = 'login',\n  render,\n  allowed = true,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => allowed ? render ? render(props) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: redirectTo,\n      state: {\n        from: props.location\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }\n}));","map":{"version":3,"sources":["/Users/emilian.radu/Developer/meetup/frontend/src/components/Global/PrivateRoute.js"],"names":["React","Redirect","Route","PrivateRoute","component","Component","redirectTo","render","allowed","rest","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,UAAU,GAAG,OAArC;AAA8CC,EAAAA,MAA9C;AAAsDC,EAAAA,OAAO,GAAG,IAAhE;AAAsE,KAAGC;AAAzE,CAAD,kBAC1B,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAEC,KAAK,IACXF,OAAO,GACLD,MAAM,GAAGA,MAAM,CAACG,KAAD,CAAT,gBACF,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFC,gBAKH,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AACZC,MAAAA,QAAQ,EAAEL,UADE;AAEZM,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAFK,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK","sourcesContent":["import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({ component: Component, redirectTo = 'login', render, allowed = true, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      allowed ? (\r\n        render ? render(props)\r\n          : <Component {...props} />\r\n      )\r\n        : (\r\n          <Redirect to={{\r\n            pathname: redirectTo,\r\n            state: { from: props.location }\r\n          }}\r\n          />)}\r\n  />\r\n)\r\n"]},"metadata":{},"sourceType":"module"}