{"ast":null,"code":"var _jsxFileName = \"/Users/emilian.radu/Developer/AIProject/frontend/src/components/Global/Select/FieldSelect.js\";\nimport React from 'react';\nimport Select from 'react-select';\nimport { SelectWrapper } from './styles';\nimport { FieldError } from '../Input/styles';\nimport AsyncSelect from 'react-select/async';\nexport const FieldSelect = ({\n  onChange: customOnChange,\n  input: {\n    value,\n    onChange,\n    onFocus,\n    onBlur\n  },\n  options,\n  meta: {\n    error,\n    touched\n  },\n  ...props\n}) => {\n  return /*#__PURE__*/React.createElement(SelectWrapper, {\n    error: touched && error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, Object.assign({}, props, {\n    className: \"react-select-container\",\n    classNamePrefix: \"react-select\",\n    options: options,\n    onChange: e => {\n      onChange(e);\n      customOnChange && customOnChange(e);\n    },\n    onBlur: onBlur,\n    onFocus: onFocus,\n    value: value && value.value ? value : options && options.filter(option => option.value === value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  })), touched && error && /*#__PURE__*/React.createElement(FieldError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 28\n    }\n  }, error));\n};\nexport const FieldAsyncSelect = ({\n  onChange: customOnChange,\n  input,\n  meta: {\n    error,\n    touched\n  },\n  options,\n  ...props\n}) => {\n  const promiseOptions = inputValue => new Promise(resolve => {\n    setTimeout(() => {\n      resolve(options);\n    }, 300);\n  });\n\n  return /*#__PURE__*/React.createElement(SelectWrapper, {\n    error: touched && error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AsyncSelect, Object.assign({}, props, input, {\n    className: \"react-select-container\",\n    classNamePrefix: \"react-select\",\n    loadOptions: promiseOptions,\n    cacheOptions: true,\n    onBlur: () => {},\n    defaultOptions: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  })), touched && error && /*#__PURE__*/React.createElement(FieldError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 28\n    }\n  }, error));\n};","map":{"version":3,"sources":["/Users/emilian.radu/Developer/AIProject/frontend/src/components/Global/Select/FieldSelect.js"],"names":["React","Select","SelectWrapper","FieldError","AsyncSelect","FieldSelect","onChange","customOnChange","input","value","onFocus","onBlur","options","meta","error","touched","props","e","filter","option","FieldAsyncSelect","promiseOptions","inputValue","Promise","resolve","setTimeout"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAC1BC,EAAAA,QAAQ,EAAEC,cADgB;AAE1BC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,KAAF;AAASH,IAAAA,QAAT;AAAmBI,IAAAA,OAAnB;AAA4BC,IAAAA;AAA5B,GAFmB;AAG1BC,EAAAA,OAH0B;AAI1BC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAJoB;AAK1B,KAAGC;AALuB,CAAD,KAMrB;AACJ,sBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAED,OAAO,IAAID,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD,oBACME,KADN;AAEE,IAAA,SAAS,EAAC,wBAFZ;AAGE,IAAA,eAAe,EAAC,cAHlB;AAIE,IAAA,OAAO,EAAEJ,OAJX;AAKE,IAAA,QAAQ,EAAEK,CAAC,IAAI;AACbX,MAAAA,QAAQ,CAACW,CAAD,CAAR;AACAV,MAAAA,cAAc,IAAIA,cAAc,CAACU,CAAD,CAAhC;AACD,KARH;AASE,IAAA,MAAM,EAAEN,MATV;AAUE,IAAA,OAAO,EAAED,OAVX;AAWE,IAAA,KAAK,EACHD,KAAK,IAAIA,KAAK,CAACA,KAAf,GACIA,KADJ,GAEIG,OAAO,IAAIA,OAAO,CAACM,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACV,KAAP,KAAiBA,KAA1C,CAdnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAkBGM,OAAO,IAAID,KAAX,iBAAoB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaA,KAAb,CAlBvB,CADF;AAsBD,CA7BM;AA+BP,OAAO,MAAMM,gBAAgB,GAAG,CAAC;AAC/Bd,EAAAA,QAAQ,EAAEC,cADqB;AAE/BC,EAAAA,KAF+B;AAG/BK,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAHyB;AAI/BH,EAAAA,OAJ+B;AAK/B,KAAGI;AAL4B,CAAD,KAM1B;AACJ,QAAMK,cAAc,GAAGC,UAAU,IAC/B,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AACrBC,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,OAAO,CAACZ,OAAD,CAAP;AACD,KAFS,EAEP,GAFO,CAAV;AAGD,GAJD,CADF;;AAOA,sBAEE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEG,OAAO,IAAID,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD,oBACME,KADN,EAEMR,KAFN;AAGE,IAAA,SAAS,EAAC,wBAHZ;AAIE,IAAA,eAAe,EAAC,cAJlB;AAKE,IAAA,WAAW,EAAEa,cALf;AAME,IAAA,YAAY,MANd;AAOE,IAAA,MAAM,EAAE,MAAM,CAAE,CAPlB;AAQE,IAAA,cAAc,MARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAWGN,OAAO,IAAID,KAAX,iBAAoB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaA,KAAb,CAXvB,CAFF;AAgBD,CA9BM","sourcesContent":["import React from 'react'\nimport Select from 'react-select'\nimport { SelectWrapper } from './styles'\nimport { FieldError } from '../Input/styles'\nimport AsyncSelect from 'react-select/async'\n\nexport const FieldSelect = ({\n  onChange: customOnChange,\n  input: { value, onChange, onFocus, onBlur },\n  options,\n  meta: { error, touched },\n  ...props\n}) => {\n  return (\n    <SelectWrapper error={touched && error}>\n      <Select\n        {...props}\n        className='react-select-container'\n        classNamePrefix='react-select'\n        options={options}\n        onChange={e => {\n          onChange(e)\n          customOnChange && customOnChange(e)\n        }}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        value={\n          value && value.value\n            ? value\n            : options && options.filter(option => option.value === value)\n        }\n      />\n      {touched && error && <FieldError>{error}</FieldError>}\n    </SelectWrapper>\n  )\n}\n\nexport const FieldAsyncSelect = ({\n  onChange: customOnChange,\n  input,\n  meta: { error, touched },\n  options,\n  ...props\n}) => {\n  const promiseOptions = inputValue =>\n    new Promise(resolve => {\n      setTimeout(() => {\n        resolve(options)\n      }, 300)\n    })\n\n  return (\n\n    <SelectWrapper error={touched && error}>\n      <AsyncSelect\n        {...props}\n        {...input}\n        className='react-select-container'\n        classNamePrefix='react-select'\n        loadOptions={promiseOptions}\n        cacheOptions\n        onBlur={() => {}}\n        defaultOptions\n      />\n      {touched && error && <FieldError>{error}</FieldError>}\n    </SelectWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}