{"ast":null,"code":"import { API_URL } from '../../config/constants';\nimport { makeAuthRequest } from '../../helpers/requestHelpers';\nimport moment from 'moment';\nimport { showSuccess } from \"../Global/Toast\";\nexport const FETCH_ROOM = 'FETCH_ROOM';\nexport const FETCH_ROOM_SUCCESS = 'FETCH_ROOM_SUCCESS';\nexport const getRoom = async ({\n  authContext,\n  roomsContext,\n  id = ''\n}) => {\n  roomsContext.dispatch({\n    type: FETCH_ROOM,\n    payload: {\n      currentTime: moment()\n    }\n  });\n  const response = await makeAuthRequest({\n    url: `${API_URL}/rooms/${id}`,\n    method: 'get'\n  })(authContext);\n  response && roomsContext.dispatch({\n    type: FETCH_ROOM_SUCCESS,\n    payload: response.data\n  });\n};\nexport const updateRoom = async ({\n  id,\n  authContext,\n  roomsContext,\n  history,\n  data\n}) => {\n  const response = await makeAuthRequest({\n    url: `${API_URL}/rooms/update/${id}`,\n    method: 'put',\n    data\n  })(authContext, true);\n\n  if (response) {\n    roomsContext && roomsContext.dispatch({\n      payload: id\n    });\n    showSuccess('Room updated');\n    history.push('/rooms');\n  }\n};","map":{"version":3,"sources":["/Users/emilian.radu/Developer/AIProject/frontend/src/components/Rooms/ActiveRoomActions.js"],"names":["API_URL","makeAuthRequest","moment","showSuccess","FETCH_ROOM","FETCH_ROOM_SUCCESS","getRoom","authContext","roomsContext","id","dispatch","type","payload","currentTime","response","url","method","data","updateRoom","history","push"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,wBAAtB;AACA,SAAQC,eAAR,QAA8B,8BAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,WAAR,QAA0B,iBAA1B;AAEA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,OAAO,GAAG,OAAO;AAACC,EAAAA,WAAD;AAAcC,EAAAA,YAAd;AAA4BC,EAAAA,EAAE,GAAG;AAAjC,CAAP,KAAgD;AACnED,EAAAA,YAAY,CAACE,QAAb,CAAsB;AAClBC,IAAAA,IAAI,EAAEP,UADY;AAElBQ,IAAAA,OAAO,EAAE;AAACC,MAAAA,WAAW,EAAEX,MAAM;AAApB;AAFS,GAAtB;AAIA,QAAMY,QAAQ,GAAG,MAAMb,eAAe,CAAC;AACnCc,IAAAA,GAAG,EAAG,GAAEf,OAAQ,UAASS,EAAG,EADO;AAEnCO,IAAAA,MAAM,EAAE;AAF2B,GAAD,CAAf,CAGpBT,WAHoB,CAAvB;AAIAO,EAAAA,QAAQ,IAAIN,YAAY,CAACE,QAAb,CAAsB;AAC9BC,IAAAA,IAAI,EAAEN,kBADwB;AAE9BO,IAAAA,OAAO,EAAEE,QAAQ,CAACG;AAFY,GAAtB,CAAZ;AAKH,CAdM;AAeP,OAAO,MAAMC,UAAU,GAAG,OAAO;AAACT,EAAAA,EAAD;AAAKF,EAAAA,WAAL;AAAkBC,EAAAA,YAAlB;AAAgCW,EAAAA,OAAhC;AAAyCF,EAAAA;AAAzC,CAAP,KAA0D;AAChF,QAAMH,QAAQ,GAAG,MAAMb,eAAe,CAAC;AACnCc,IAAAA,GAAG,EAAG,GAAEf,OAAQ,iBAAgBS,EAAG,EADA;AAEnCO,IAAAA,MAAM,EAAE,KAF2B;AAGnCC,IAAAA;AAHmC,GAAD,CAAf,CAKtBV,WALsB,EAKT,IALS,CAAvB;;AAMA,MAAIO,QAAJ,EAAc;AACVN,IAAAA,YAAY,IAAIA,YAAY,CAACE,QAAb,CAAsB;AAClCE,MAAAA,OAAO,EAAEH;AADyB,KAAtB,CAAhB;AAGAN,IAAAA,WAAW,CAAC,cAAD,CAAX;AACAgB,IAAAA,OAAO,CAACC,IAAR,CAAa,QAAb;AACH;AACJ,CAdM","sourcesContent":["import {API_URL} from '../../config/constants'\nimport {makeAuthRequest} from '../../helpers/requestHelpers'\nimport moment from 'moment'\nimport {showSuccess} from \"../Global/Toast\";\n\nexport const FETCH_ROOM = 'FETCH_ROOM'\nexport const FETCH_ROOM_SUCCESS = 'FETCH_ROOM_SUCCESS'\nexport const getRoom = async ({authContext, roomsContext, id = ''}) => {\n    roomsContext.dispatch({\n        type: FETCH_ROOM,\n        payload: {currentTime: moment()}\n    })\n    const response = await makeAuthRequest({\n        url: `${API_URL}/rooms/${id}`,\n        method: 'get'\n    })(authContext)\n    response && roomsContext.dispatch({\n        type: FETCH_ROOM_SUCCESS,\n        payload: response.data\n    })\n\n}\nexport const updateRoom = async ({id, authContext, roomsContext, history, data}) => {\n    const response = await makeAuthRequest({\n        url: `${API_URL}/rooms/update/${id}`,\n        method: 'put',\n        data\n    })\n    (authContext, true)\n    if (response) {\n        roomsContext && roomsContext.dispatch({\n            payload: id\n        })\n        showSuccess('Room updated')\n        history.push('/rooms')\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}