{"ast":null,"code":"var _jsxFileName = \"/Users/emilian.radu/Developer/meetup/frontend/src/components/Rooms/ActiveRoomContext.js\";\nimport React from 'react';\nimport { FETCH_ROOM_SUCCESS, FETCH_ROOM } from './ActiveRoomActions';\nconst initialState = {};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case FETCH_ROOM:\n      return { ...state,\n        loadingTournament: true\n      };\n\n    case FETCH_ROOM_SUCCESS:\n      return { ...state,\n        room: action.payload,\n        loadingTournament: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst ActiveRoomContext = React.createContext();\n\nfunction ActiveRoomContextProvider(props) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  return /*#__PURE__*/React.createElement(ActiveRoomContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, props.children);\n}\n\nconst ActiveRoomContextConsumer = ActiveRoomContext.Consumer;\nexport { ActiveRoomContext, ActiveRoomContextProvider, ActiveRoomContextConsumer };","map":{"version":3,"sources":["/Users/emilian.radu/Developer/meetup/frontend/src/components/Rooms/ActiveRoomContext.js"],"names":["React","FETCH_ROOM_SUCCESS","FETCH_ROOM","initialState","reducer","state","action","type","loadingTournament","room","payload","ActiveRoomContext","createContext","ActiveRoomContextProvider","props","dispatch","useReducer","children","ActiveRoomContextConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,kBAAR,EAA4BC,UAA5B,QAA6C,qBAA7C;AAEA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKL,UAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHG,QAAAA,iBAAiB,EAAE;AAFhB,OAAP;;AAIJ,SAAKP,kBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHI,QAAAA,IAAI,EAAEH,MAAM,CAACI,OAFV;AAGHF,QAAAA,iBAAiB,EAAE;AAHhB,OAAP;;AAMJ;AACI,aAAOH,KAAP;AAfR;AAiBH,CAlBD;;AAoBA,MAAMM,iBAAiB,GAAGX,KAAK,CAACY,aAAN,EAA1B;;AAEA,SAASC,yBAAT,CAAmCC,KAAnC,EAA0C;AACtC,QAAM,CAACT,KAAD,EAAQU,QAAR,IAAoBf,KAAK,CAACgB,UAAN,CAAiBZ,OAAjB,EAA0BD,YAA1B,CAA1B;AACA,sBACI,oBAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAACE,MAAAA,KAAD;AAAQU,MAAAA;AAAR,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACG,QADX,CADJ;AAKH;;AAED,MAAMC,yBAAyB,GAAGP,iBAAiB,CAACQ,QAApD;AAEA,SAAQR,iBAAR,EAA2BE,yBAA3B,EAAsDK,yBAAtD","sourcesContent":["import React from 'react'\nimport {FETCH_ROOM_SUCCESS, FETCH_ROOM} from './ActiveRoomActions'\n\nconst initialState = {}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n\n        case FETCH_ROOM:\n            return {\n                ...state,\n                loadingTournament: true\n            }\n        case FETCH_ROOM_SUCCESS:\n            return {\n                ...state,\n                room: action.payload,\n                loadingTournament: false\n            }\n\n        default:\n            return state\n    }\n}\n\nconst ActiveRoomContext = React.createContext()\n\nfunction ActiveRoomContextProvider(props) {\n    const [state, dispatch] = React.useReducer(reducer, initialState)\n    return (\n        <ActiveRoomContext.Provider value={{state, dispatch}}>\n            {props.children}\n        </ActiveRoomContext.Provider>\n    )\n}\n\nconst ActiveRoomContextConsumer = ActiveRoomContext.Consumer\n\nexport {ActiveRoomContext, ActiveRoomContextProvider, ActiveRoomContextConsumer}\n"]},"metadata":{},"sourceType":"module"}