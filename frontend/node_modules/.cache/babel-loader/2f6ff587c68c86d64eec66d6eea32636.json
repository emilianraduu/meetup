{"ast":null,"code":"var _jsxFileName = \"/Users/emilian.radu/Developer/AIProject/frontend/src/components/Global/Filter/FilterPanel.js\";\nimport React, { useState } from 'react';\nimport { PanelClose, PanelHead, PanelHeader, PanelWrapper, PanelClear, PanelFooter, PanelContent, PanelReset } from './styles/filterMob';\nimport Select from 'react-select';\nimport { SecondaryButton } from '../../../styles/shared/button';\nimport { withRouter } from 'react-router-dom';\nimport _ from 'lodash';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport { Label } from '../../../styles/typography/typography';\nimport { DatePickerWrapper, DatePickerCustomStyle } from '../DatePickers/styles';\nimport { FilterInput, Input, InputWithIcon } from '../../../styles/shared/input';\nimport { CALENDAR_ICON_ALT, colorBlack12, colorWhite, FILTER_ICON, radiusX0, TIMES_ICON } from '../../../styles/abstract/variables';\nimport { NoKeyboardInput } from '../Input/NoKeyboardInput';\nimport { Field } from 'react-final-form';\nexport function FilterPanel({\n  expanded,\n  left,\n  filters = {},\n  filterFields = [],\n  clearFilters,\n  removeFilter,\n  onClose,\n  handleFilter,\n  setExpanded\n}) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PanelWrapper, {\n    expanded: expanded,\n    left: left,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PanelHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PanelHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: FILTER_ICON,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Filter\")), /*#__PURE__*/React.createElement(PanelClose, {\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: TIMES_ICON,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(PanelContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, filterFields.map((field, index) => /*#__PURE__*/React.createElement(ClearableFilterField, {\n    key: index,\n    filters: filters,\n    field: field,\n    handleFilter: handleFilter,\n    removeFilter: removeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(PanelFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PanelClear, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SecondaryButton, {\n    rightMargin: true,\n    onClick: () => clearFilters(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(SecondaryButton, {\n    filled: true,\n    onClick: () => setExpanded(!expanded),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Apply\"))))));\n}\nexport const ClearableFilterField = ({\n  filters,\n  field,\n  handleFilter,\n  removeFilter,\n  web\n}) => {\n  const [calendar, setCalendar] = useState('');\n  return /*#__PURE__*/React.createElement(FilterInput, {\n    web: web,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FilterField, {\n    filters: filters,\n    field: field,\n    handleFilter: handleFilter,\n    removeFilter: removeFilter,\n    calendar: calendar,\n    setCalendar: setCalendar,\n    web: web,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n};\nexport const FilterField = ({\n  removeFilter,\n  filters,\n  field,\n  handleFilter,\n  calendar,\n  setCalendar,\n  web\n}) => {\n  const selectStyleMobile = {\n    control: () => ({\n      display: 'flex',\n      background: colorWhite,\n      alignSelf: 'center',\n      height: '40px',\n      border: `1px ${colorBlack12} solid`,\n      borderRadius: radiusX0,\n      width: '100%'\n    })\n  };\n  const selectStyleWeb = {\n    control: () => ({\n      display: 'flex',\n      background: colorWhite,\n      alignSelf: 'center',\n      height: '32px',\n      border: `1px ${colorBlack12} solid`,\n      borderRadius: radiusX0,\n      width: '100%'\n    })\n  };\n  let placeholderText = '';\n\n  if (field.name === 'User') {\n    placeholderText = 'Type a name';\n  } else if (field.name === 'Country') {\n    placeholderText = 'Type a country name';\n  } else if (field.name === 'title') {\n    placeholderText = 'Type a title';\n  } else if (field.name === 'message') {\n    placeholderText = 'Type a message';\n  } else if (field.name === 'tables') {\n    placeholderText = 'e.g. 1-5';\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Label, {\n    upper: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, _.startCase(field.name)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, field.type === 'datetime' && /*#__PURE__*/React.createElement(InputWithIcon, {\n    filter: \"true\",\n    calendar: calendar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DatePickerWrapper, {\n    filter: \"true\",\n    web: web,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DatePickerCustomStyle, {\n    filtersMobile: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    dateFormat: \"dd-MM-yyyy HH:mm\",\n    timeFormat: \"HH:mm\",\n    showTimeSelect: true,\n    selected: filters[field.dbName] ? moment(filters[field.dbName][1]).toDate() : null,\n    onChange: date => {\n      handleFilter({\n        name: field.dbName,\n        operator: field.operator,\n        value: moment(date).format('YYYY-MM-DD HH:mm')\n      });\n      setCalendar(true);\n    },\n    onChangeRaw: e => e.preventDefault(),\n    customInput: /*#__PURE__*/React.createElement(NoKeyboardInput, {\n      placeholderText: field.name === 'dateFrom' ? 'Select date from' : 'Select date to',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 34\n      }\n    }),\n    placeholderText: \"Select date from\",\n    showYearDropdown: true,\n    scrollableYearDropdown: true,\n    yearDropdownItemNumber: 5,\n    showMonthDropdown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"i\", {\n    className: CALENDAR_ICON_ALT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  })), field.type === 'text' && /*#__PURE__*/React.createElement(Input, {\n    web: web,\n    type: \"text\",\n    value: filters[field.dbName] && filters[field.dbName][1] ? filters[field.dbName][1] : '',\n    onChange: e => {\n      handleFilter({\n        name: field.dbName,\n        operator: field.operator,\n        value: e.target.value\n      });\n    },\n    placeholder: placeholderText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }), field.type === 'select' && /*#__PURE__*/React.createElement(Select, {\n    styles: web ? selectStyleWeb : selectStyleMobile,\n    options: field.options.map(option => {\n      return {\n        label: _.startCase(option),\n        value: option\n      };\n    }),\n    value: filters[field.dbName] ? {\n      label: _.startCase(filters[field.dbName]),\n      value: filters[field.dbName]\n    } : '',\n    onChange: option => {\n      handleFilter({\n        name: field.dbName,\n        operator: field.operator,\n        value: option.value\n      });\n    },\n    onMenuScrollToBottom: field.bottom && field.bottom,\n    onInputChange: field.change && field.change,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }), filters[field.dbName] && /*#__PURE__*/React.createElement(PanelReset, {\n    web: web,\n    select: field.type === 'select',\n    onClick: () => {\n      removeFilter(field.dbName);\n      setCalendar(false); // setCalendar(calendar.push({value:false}))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: TIMES_ICON,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }))));\n};\nexport default withRouter(FilterPanel);","map":{"version":3,"sources":["/Users/emilian.radu/Developer/AIProject/frontend/src/components/Global/Filter/FilterPanel.js"],"names":["React","useState","PanelClose","PanelHead","PanelHeader","PanelWrapper","PanelClear","PanelFooter","PanelContent","PanelReset","Select","SecondaryButton","withRouter","_","DatePicker","moment","Label","DatePickerWrapper","DatePickerCustomStyle","FilterInput","Input","InputWithIcon","CALENDAR_ICON_ALT","colorBlack12","colorWhite","FILTER_ICON","radiusX0","TIMES_ICON","NoKeyboardInput","Field","FilterPanel","expanded","left","filters","filterFields","clearFilters","removeFilter","onClose","handleFilter","setExpanded","map","field","index","ClearableFilterField","web","calendar","setCalendar","FilterField","selectStyleMobile","control","display","background","alignSelf","height","border","borderRadius","width","selectStyleWeb","placeholderText","name","startCase","position","type","dbName","toDate","date","operator","value","format","e","preventDefault","target","options","option","label","bottom","change"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n  PanelClose,\r\n  PanelHead,\r\n  PanelHeader,\r\n  PanelWrapper,\r\n  PanelClear, PanelFooter, PanelContent, PanelReset\r\n} from './styles/filterMob'\r\nimport Select from 'react-select'\r\nimport { SecondaryButton } from '../../../styles/shared/button'\r\nimport { withRouter } from 'react-router-dom'\r\nimport _ from 'lodash'\r\nimport DatePicker from 'react-datepicker'\r\nimport moment from 'moment'\r\nimport { Label } from '../../../styles/typography/typography'\r\nimport { DatePickerWrapper, DatePickerCustomStyle } from '../DatePickers/styles'\r\nimport { FilterInput, Input, InputWithIcon } from '../../../styles/shared/input'\r\nimport {\r\n  CALENDAR_ICON_ALT,\r\n  colorBlack12,\r\n  colorWhite,\r\n  FILTER_ICON,\r\n  radiusX0,\r\n  TIMES_ICON\r\n} from '../../../styles/abstract/variables'\r\nimport { NoKeyboardInput } from '../Input/NoKeyboardInput'\r\nimport { Field } from 'react-final-form'\r\n\r\nexport function FilterPanel ({ expanded, left, filters = {}, filterFields = [], clearFilters, removeFilter, onClose, handleFilter, setExpanded }) {\r\n  return (\r\n    <>\r\n      <PanelWrapper expanded={expanded} left={left}>\r\n        <PanelHeader>\r\n          <PanelHead>\r\n            <i className={FILTER_ICON} />\r\n            <span>Filter</span>\r\n          </PanelHead>\r\n          <PanelClose onClick={onClose}>\r\n            <i className={TIMES_ICON} />\r\n          </PanelClose>\r\n        </PanelHeader>\r\n        <PanelContent>\r\n          {\r\n            filterFields.map((field, index) => (\r\n              <ClearableFilterField\r\n                key={index} filters={filters} field={field} handleFilter={handleFilter}\r\n                removeFilter={removeFilter}\r\n              />\r\n            )\r\n            )\r\n          }\r\n          <PanelFooter>\r\n            <PanelClear>\r\n              <SecondaryButton rightMargin onClick={() => clearFilters()}>\r\n                Reset\r\n              </SecondaryButton>\r\n              <SecondaryButton filled onClick={() => setExpanded(!expanded)}>\r\n                Apply\r\n              </SecondaryButton>\r\n            </PanelClear>\r\n          </PanelFooter>\r\n        </PanelContent>\r\n      </PanelWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const ClearableFilterField = ({ filters, field, handleFilter, removeFilter, web }) => {\r\n  const [calendar, setCalendar] = useState('')\r\n  return (\r\n    <FilterInput web={web}>\r\n      <FilterField\r\n        filters={filters} field={field} handleFilter={handleFilter}\r\n        removeFilter={removeFilter} calendar={calendar} setCalendar={setCalendar} web={web}\r\n      />\r\n    </FilterInput>\r\n  )\r\n}\r\n\r\nexport const FilterField = ({ removeFilter, filters, field, handleFilter, calendar, setCalendar, web }) => {\r\n  const selectStyleMobile = {\r\n    control: () => ({\r\n      display: 'flex',\r\n      background: colorWhite,\r\n      alignSelf: 'center',\r\n      height: '40px',\r\n      border: `1px ${colorBlack12} solid`,\r\n      borderRadius: radiusX0,\r\n      width: '100%'\r\n    })\r\n  }\r\n  const selectStyleWeb = {\r\n    control: () => ({\r\n      display: 'flex',\r\n      background: colorWhite,\r\n      alignSelf: 'center',\r\n      height: '32px',\r\n      border: `1px ${colorBlack12} solid`,\r\n      borderRadius: radiusX0,\r\n      width: '100%'\r\n    })\r\n  }\r\n  let placeholderText = ''\r\n  if (field.name === 'User') { placeholderText = 'Type a name' } else if (field.name === 'Country') { placeholderText = 'Type a country name' } else if (field.name === 'title') { placeholderText = 'Type a title' } else if (field.name === 'message') { placeholderText = 'Type a message' } else if (field.name === 'tables') { placeholderText = 'e.g. 1-5' }\r\n  return (\r\n    <>\r\n      <Label upper>\r\n        {\r\n          _.startCase(field.name)\r\n        }\r\n      </Label>\r\n      <div style={{ position: 'relative' }}>\r\n        {\r\n          field.type === 'datetime' &&\r\n            <InputWithIcon filter='true' calendar={calendar}>\r\n              <DatePickerWrapper filter='true' web={web}>\r\n                <DatePickerCustomStyle filtersMobile>\r\n                  <DatePicker\r\n                    dateFormat='dd-MM-yyyy HH:mm'\r\n                    timeFormat='HH:mm'\r\n                    showTimeSelect\r\n                    selected={filters[field.dbName] ? moment(filters[field.dbName][1]).toDate() : null}\r\n                    onChange={(date) => {\r\n                      handleFilter({\r\n                        name: field.dbName,\r\n                        operator: field.operator,\r\n                        value: moment(date).format('YYYY-MM-DD HH:mm')\r\n                      })\r\n                      setCalendar(true)\r\n                    }}\r\n                    onChangeRaw={(e) => e.preventDefault()}\r\n                    customInput={<NoKeyboardInput\r\n                      placeholderText={field.name === 'dateFrom' ? 'Select date from' : 'Select date to'}\r\n                    />}\r\n                    placeholderText='Select date from'\r\n                    showYearDropdown\r\n                    scrollableYearDropdown\r\n                    yearDropdownItemNumber={5}\r\n                    showMonthDropdown\r\n                  />\r\n                </DatePickerCustomStyle>\r\n              </DatePickerWrapper>\r\n              <i className={CALENDAR_ICON_ALT} />\r\n            </InputWithIcon>\r\n        }\r\n        {\r\n          field.type === 'text' &&\r\n            <Input\r\n              web={web}\r\n              type='text'\r\n              value={filters[field.dbName] && filters[field.dbName][1] ? filters[field.dbName][1] : ''}\r\n              onChange={(e) => {\r\n                handleFilter({\r\n                  name: field.dbName,\r\n                  operator: field.operator,\r\n                  value: e.target.value\r\n                })\r\n              }}\r\n              placeholder={placeholderText}\r\n            />\r\n        }\r\n        {\r\n          field.type === 'select' &&\r\n            <Select\r\n              styles={web ? selectStyleWeb : selectStyleMobile}\r\n              options={field.options.map((option) => {\r\n                return { label: _.startCase(option), value: option }\r\n              })}\r\n              value={filters[field.dbName] ? {\r\n                label: _.startCase(filters[field.dbName]),\r\n                value: filters[field.dbName]\r\n              } : ''}\r\n              onChange={(option => {\r\n                handleFilter({\r\n                  name: field.dbName,\r\n                  operator: field.operator,\r\n                  value: option.value\r\n                })\r\n              })}\r\n              onMenuScrollToBottom={field.bottom && field.bottom}\r\n              onInputChange={field.change && field.change}\r\n            />\r\n        }\r\n        {\r\n          filters[field.dbName] &&\r\n            <PanelReset web={web} select={field.type === 'select'} onClick={() => {\r\n              removeFilter(field.dbName)\r\n              setCalendar(false)\r\n              // setCalendar(calendar.push({value:false}))\r\n            }} ><i\r\n              className={TIMES_ICON}\r\n            />\r\n            </PanelReset>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default withRouter(FilterPanel)\r\n"]},"metadata":{},"sourceType":"module"}