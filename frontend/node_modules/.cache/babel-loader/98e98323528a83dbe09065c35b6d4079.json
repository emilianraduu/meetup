{"ast":null,"code":"import { API_URL } from '../../config/constants';\nimport { makeAuthRequest } from '../../helpers/requestHelpers';\nimport { showSuccess } from \"../Global/Toast\";\nexport const FETCH_COURSES = 'FETCH_COURSES';\nexport const CREATE_COURSE = 'CREATE_COURSE';\nexport const CREATE_COURSE_SUCCESS = 'CREATE_COURSE_SUCCESS';\nexport const FETCH_COURSES_SUCCESS = 'FETCH_COURSES_SUCCESS';\nexport const getCourses = async ({\n  authContext,\n  coursesContext\n}) => {\n  coursesContext.dispatch({\n    type: FETCH_COURSES,\n    payload: {\n      loading: true\n    }\n  });\n  const response = await makeAuthRequest({\n    url: `${API_URL}/classes`,\n    method: 'get'\n  })(authContext);\n\n  if (response) {\n    coursesContext.dispatch({\n      type: FETCH_COURSES_SUCCESS,\n      payload: {\n        data: response.data,\n        loading: false\n      }\n    });\n  } else {\n    coursesContext.dispatch({\n      type: FETCH_COURSES,\n      payload: {\n        loading: true\n      }\n    });\n  }\n};\nexport const createCourse = async ({\n  authContext,\n  staffsContext,\n  data,\n  history\n}) => {\n  staffsContext.dispatch({\n    type: CREATE_COURSE\n  });\n  const response = await makeAuthRequest({\n    url: `${API_URL}/classes/create`,\n    method: 'post',\n    data\n  })(authContext, true);\n  response && staffsContext.dispatch({\n    type: CREATE_COURSE_SUCCESS,\n    payload: response.data\n  });\n\n  if (response && response.data) {\n    showSuccess('Course created');\n    history.push(`/courses`);\n  } else {\n    showSuccess(response.message);\n  }\n};","map":{"version":3,"sources":["/Users/emilian.radu/Developer/meetup/frontend/src/components/Courses/CoursesActions.js"],"names":["API_URL","makeAuthRequest","showSuccess","FETCH_COURSES","CREATE_COURSE","CREATE_COURSE_SUCCESS","FETCH_COURSES_SUCCESS","getCourses","authContext","coursesContext","dispatch","type","payload","loading","response","url","method","data","createCourse","staffsContext","history","push","message"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,wBAAtB;AACA,SAAQC,eAAR,QAA8B,8BAA9B;AACA,SAAQC,WAAR,QAA0B,iBAA1B;AAEA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,MAAMC,UAAU,GAAG,OAAO;AAACC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAP,KAAyC;AAC/DA,EAAAA,cAAc,CAACC,QAAf,CAAwB;AACpBC,IAAAA,IAAI,EAAER,aADc;AAEpBS,IAAAA,OAAO,EAAE;AAACC,MAAAA,OAAO,EAAE;AAAV;AAFW,GAAxB;AAIA,QAAMC,QAAQ,GAAG,MAAMb,eAAe,CAAC;AACnCc,IAAAA,GAAG,EAAG,GAAEf,OAAQ,UADmB;AAEnCgB,IAAAA,MAAM,EAAE;AAF2B,GAAD,CAAf,CAGpBR,WAHoB,CAAvB;;AAIA,MAAIM,QAAJ,EAAc;AACVL,IAAAA,cAAc,CAACC,QAAf,CAAwB;AACpBC,MAAAA,IAAI,EAAEL,qBADc;AAEpBM,MAAAA,OAAO,EAAE;AAACK,QAAAA,IAAI,EAAEH,QAAQ,CAACG,IAAhB;AAAsBJ,QAAAA,OAAO,EAAE;AAA/B;AAFW,KAAxB;AAIH,GALD,MAKO;AACHJ,IAAAA,cAAc,CAACC,QAAf,CAAwB;AACpBC,MAAAA,IAAI,EAAER,aADc;AAEpBS,MAAAA,OAAO,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV;AAFW,KAAxB;AAIH;AACJ,CApBM;AAuBP,OAAO,MAAMK,YAAY,GAAG,OAAO;AAACV,EAAAA,WAAD;AAAcW,EAAAA,aAAd;AAA6BF,EAAAA,IAA7B;AAAmCG,EAAAA;AAAnC,CAAP,KAAuD;AAC/ED,EAAAA,aAAa,CAACT,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAEP;AADa,GAAvB;AAGA,QAAMU,QAAQ,GAAG,MAAMb,eAAe,CAAC;AACnCc,IAAAA,GAAG,EAAG,GAAEf,OAAQ,iBADmB;AAEnCgB,IAAAA,MAAM,EAAE,MAF2B;AAGnCC,IAAAA;AAHmC,GAAD,CAAf,CAIpBT,WAJoB,EAIP,IAJO,CAAvB;AAKAM,EAAAA,QAAQ,IAAIK,aAAa,CAACT,QAAd,CAAuB;AAC/BC,IAAAA,IAAI,EAAEN,qBADyB;AAE/BO,IAAAA,OAAO,EAAEE,QAAQ,CAACG;AAFa,GAAvB,CAAZ;;AAKA,MAAIH,QAAQ,IAAIA,QAAQ,CAACG,IAAzB,EAA+B;AAC3Bf,IAAAA,WAAW,CAAC,gBAAD,CAAX;AACAkB,IAAAA,OAAO,CAACC,IAAR,CAAc,UAAd;AACH,GAHD,MAGO;AACHnB,IAAAA,WAAW,CAACY,QAAQ,CAACQ,OAAV,CAAX;AACH;AACJ,CApBM","sourcesContent":["import {API_URL} from '../../config/constants'\r\nimport {makeAuthRequest} from '../../helpers/requestHelpers'\r\nimport {showSuccess} from \"../Global/Toast\";\r\n\r\nexport const FETCH_COURSES = 'FETCH_COURSES'\r\nexport const CREATE_COURSE = 'CREATE_COURSE'\r\nexport const CREATE_COURSE_SUCCESS = 'CREATE_COURSE_SUCCESS'\r\nexport const FETCH_COURSES_SUCCESS = 'FETCH_COURSES_SUCCESS'\r\n\r\nexport const getCourses = async ({authContext, coursesContext}) => {\r\n    coursesContext.dispatch({\r\n        type: FETCH_COURSES,\r\n        payload: {loading: true}\r\n    })\r\n    const response = await makeAuthRequest({\r\n        url: `${API_URL}/classes`,\r\n        method: 'get'\r\n    })(authContext)\r\n    if (response) {\r\n        coursesContext.dispatch({\r\n            type: FETCH_COURSES_SUCCESS,\r\n            payload: {data: response.data, loading: false}\r\n        })\r\n    } else {\r\n        coursesContext.dispatch({\r\n            type: FETCH_COURSES,\r\n            payload: {loading: true}\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createCourse = async ({authContext, staffsContext, data, history}) => {\r\n    staffsContext.dispatch({\r\n        type: CREATE_COURSE\r\n    })\r\n    const response = await makeAuthRequest({\r\n        url: `${API_URL}/classes/create`,\r\n        method: 'post',\r\n        data,\r\n    })(authContext, true)\r\n    response && staffsContext.dispatch({\r\n        type: CREATE_COURSE_SUCCESS,\r\n        payload: response.data\r\n    })\r\n\r\n    if (response && response.data) {\r\n        showSuccess('Course created')\r\n        history.push(`/courses`)\r\n    } else {\r\n        showSuccess(response.message)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}