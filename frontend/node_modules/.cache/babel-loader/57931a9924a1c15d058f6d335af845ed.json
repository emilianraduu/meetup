{"ast":null,"code":"var _jsxFileName = \"/Users/emilian.radu/Developer/meetup/frontend/src/components/Courses/listing/CoursesListing.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { CoursesContext } from '../CoursesContext';\nimport { applyTournamentsFilter, changeTournamentsPage, changeTournamentsSort, clearTournamentsFilters, getCourses, removeTournamentsFilter } from '../CoursesActions';\nimport { BrowserView } from 'react-device-detect';\nimport CoursesListingWeb from './CoursesListingWeb';\nimport { AuthContext } from '../../Auth/AuthContext';\nimport { withRouter } from 'react-router-dom';\nexport const TOURNAMENT_LISTING_HEADERS = [{\n  name: 'name'\n}, {\n  name: 'available_from'\n}, {\n  name: 'available_to'\n}, {\n  name: 'duration'\n}, {\n  name: 'no_courses'\n}, {\n  name: 'no_seminars'\n}];\nexport const URL_TO_TYPE = {};\nexport const TYPE_TO_URL = {};\n\nfunction CoursesListing({\n  match\n}) {\n  const authContext = useContext(AuthContext);\n  const {\n    user\n  } = authContext.state;\n\n  if (user.isAdmin) {\n    if (!TOURNAMENT_LISTING_HEADERS.find(t => t.name === 'teacher')) {\n      TOURNAMENT_LISTING_HEADERS.push({\n        name: 'teacher'\n      });\n    }\n  }\n\n  const coursesContext = useContext(CoursesContext);\n  const {\n    courses,\n    loading\n  } = coursesContext.state;\n  useEffect(() => {\n    getCourses({\n      authContext,\n      coursesContext\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BrowserView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CoursesListingWeb, {\n    match: match,\n    courses: user.isAdmin ? courses : user.classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default withRouter(CoursesListing);","map":{"version":3,"sources":["/Users/emilian.radu/Developer/meetup/frontend/src/components/Courses/listing/CoursesListing.js"],"names":["React","useContext","useEffect","CoursesContext","applyTournamentsFilter","changeTournamentsPage","changeTournamentsSort","clearTournamentsFilters","getCourses","removeTournamentsFilter","BrowserView","CoursesListingWeb","AuthContext","withRouter","TOURNAMENT_LISTING_HEADERS","name","URL_TO_TYPE","TYPE_TO_URL","CoursesListing","match","authContext","user","state","isAdmin","find","t","push","coursesContext","courses","loading","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,SACIC,sBADJ,EAEIC,qBAFJ,EAGIC,qBAHJ,EAIIC,uBAJJ,EAKIC,UALJ,EAMIC,uBANJ,QAOO,mBAPP;AAQA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AAEA,OAAO,MAAMC,0BAA0B,GAAG,CACtC;AACIC,EAAAA,IAAI,EAAE;AADV,CADsC,EAItC;AACIA,EAAAA,IAAI,EAAE;AADV,CAJsC,EAOtC;AACIA,EAAAA,IAAI,EAAE;AADV,CAPsC,EAUtC;AACIA,EAAAA,IAAI,EAAE;AADV,CAVsC,EAatC;AACIA,EAAAA,IAAI,EAAE;AADV,CAbsC,EAgBtC;AACIA,EAAAA,IAAI,EAAE;AADV,CAhBsC,CAAnC;AAqBP,OAAO,MAAMC,WAAW,GAAG,EAApB;AACP,OAAO,MAAMC,WAAW,GAAG,EAApB;;AAEP,SAASC,cAAT,CAAwB;AAACC,EAAAA;AAAD,CAAxB,EAAiC;AAC7B,QAAMC,WAAW,GAAGnB,UAAU,CAACW,WAAD,CAA9B;AACA,QAAM;AAACS,IAAAA;AAAD,MAASD,WAAW,CAACE,KAA3B;;AACA,MAAID,IAAI,CAACE,OAAT,EAAkB;AACd,QAAG,CAACT,0BAA0B,CAACU,IAA3B,CAAiCC,CAAD,IAAKA,CAAC,CAACV,IAAF,KAAW,SAAhD,CAAJ,EAAgE;AAC5DD,MAAAA,0BAA0B,CAACY,IAA3B,CAAgC;AAC5BX,QAAAA,IAAI,EAAE;AADsB,OAAhC;AAGH;AACJ;;AACD,QAAMY,cAAc,GAAG1B,UAAU,CAACE,cAAD,CAAjC;AACA,QAAM;AAACyB,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBF,cAAc,CAACL,KAA1C;AACApB,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,UAAU,CAAC;AAACY,MAAAA,WAAD;AAAcO,MAAAA;AAAd,KAAD,CAAV;AACH,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI,uDACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,iBAAD;AACI,IAAA,KAAK,EAAER,KADX;AAEI,IAAA,OAAO,EAAEE,IAAI,CAACE,OAAL,GAAeK,OAAf,GAAyBP,IAAI,CAACS,OAF3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAUH;;AAED,eAAejB,UAAU,CAACK,cAAD,CAAzB","sourcesContent":["import React, {useContext, useEffect} from 'react'\nimport {CoursesContext} from '../CoursesContext'\nimport {\n    applyTournamentsFilter,\n    changeTournamentsPage,\n    changeTournamentsSort,\n    clearTournamentsFilters,\n    getCourses,\n    removeTournamentsFilter\n} from '../CoursesActions'\nimport {BrowserView} from 'react-device-detect'\nimport CoursesListingWeb from './CoursesListingWeb'\nimport {AuthContext} from '../../Auth/AuthContext'\nimport {withRouter} from 'react-router-dom'\n\nexport const TOURNAMENT_LISTING_HEADERS = [\n    {\n        name: 'name',\n    },\n    {\n        name: 'available_from',\n    },\n    {\n        name: 'available_to',\n    },\n    {\n        name: 'duration',\n    },\n    {\n        name: 'no_courses',\n    },\n    {\n        name: 'no_seminars',\n    },\n]\n\nexport const URL_TO_TYPE = {}\nexport const TYPE_TO_URL = {}\n\nfunction CoursesListing({match}) {\n    const authContext = useContext(AuthContext)\n    const {user} = authContext.state\n    if (user.isAdmin) {\n        if(!TOURNAMENT_LISTING_HEADERS.find((t)=>t.name === 'teacher')) {\n            TOURNAMENT_LISTING_HEADERS.push({\n                name: 'teacher',\n            },)\n        }\n    }\n    const coursesContext = useContext(CoursesContext)\n    const {courses, loading} = coursesContext.state\n    useEffect(() => {\n        getCourses({authContext, coursesContext})\n    }, [])\n    return (\n        <>\n            <BrowserView>\n                <CoursesListingWeb\n                    match={match}\n                    courses={user.isAdmin ? courses : user.classes}\n                />\n            </BrowserView>\n        </>\n    )\n}\n\nexport default withRouter(CoursesListing)\n"]},"metadata":{},"sourceType":"module"}