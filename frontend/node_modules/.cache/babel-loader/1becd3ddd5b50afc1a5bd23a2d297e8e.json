{"ast":null,"code":"var _jsxFileName = \"/Users/emilian.radu/Developer/meetup/frontend/src/components/Global/Toast.js\";\nimport styled from 'styled-components';\nimport React from 'react';\nimport { Slide, toast } from 'react-toastify';\nimport { css } from 'glamor';\nimport { colorFail, colorPrimary, colorSecondaryGradient, spacingX4, TIMES_ICON } from '../../styles/abstract/variables';\nimport { NormalPBold } from '../../styles/typography/typography';\nimport { isMobile } from 'react-device-detect';\nconst Wrapper = styled.div`\n  z-index: 99;\n  height: 100%;\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  padding: 0 ${spacingX4};\n  position: relative;\n  height: 40px;\n  &:before{\n     content: '';\n     height: 100%;\n     width: 20px;\n     position: absolute;\n     left: 0;\n     background: ${colorSecondaryGradient};\n     ${props => props.error && `background: ${colorFail}`}\n     ${props => props.notification && `background: ${colorPrimary};`}\n  }\n`;\nconst CloseWrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n \n`;\nexport function Toast({\n  errorMessage,\n  message,\n  error\n}) {\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, error ? /*#__PURE__*/React.createElement(NormalPBold, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \" \", errorMessage) : /*#__PURE__*/React.createElement(NormalPBold, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \" \", message ? message : 'Success'));\n}\n\nfunction setToastStyle({\n  color\n}) {\n  return {\n    closeButton: /*#__PURE__*/React.createElement(CloseWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: TIMES_ICON,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    })),\n    transition: Slide,\n    draggable: false,\n    bodyClassName: css({\n      margin: '0!important',\n      display: 'flex',\n      flexFlow: 'column',\n      height: '100%',\n      justifyContent: 'center'\n    }),\n    className: css({\n      padding: '0!important',\n      display: 'flex',\n      borderRadius: !isMobile && '50px  0 0 50px !important',\n      minHeight: 'unset!important'\n    }),\n    progressClassName: css({\n      background: `${color}!important`,\n      height: `3px!important`\n    }),\n    style: css({\n      marginRight: '0!important'\n    }),\n    autoClose: 3000\n  };\n}\n\nexport const showSuccess = message => toast( /*#__PURE__*/React.createElement(Toast, {\n  message: message,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 47\n  }\n}), setToastStyle({\n  color: colorSecondaryGradient\n})); //\n// export const showNotification = (message) => toast(<Toast notification message={message}/>, {\n//   closeButton: false,\n//   className: {\n//     padding: 0,\n//     background: 'transparent',\n//     borderRadius: '4px'\n//   },\n//   progressClassName: css({\n//     background: 'transparent'\n//   })\n// })","map":{"version":3,"sources":["/Users/emilian.radu/Developer/meetup/frontend/src/components/Global/Toast.js"],"names":["styled","React","Slide","toast","css","colorFail","colorPrimary","colorSecondaryGradient","spacingX4","TIMES_ICON","NormalPBold","isMobile","Wrapper","div","props","error","notification","CloseWrapper","Toast","errorMessage","message","setToastStyle","color","closeButton","transition","draggable","bodyClassName","margin","display","flexFlow","height","justifyContent","className","padding","borderRadius","minHeight","progressClassName","background","style","marginRight","autoClose","showSuccess"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\r\nimport React from 'react'\r\nimport { Slide, toast } from 'react-toastify'\r\nimport { css } from 'glamor'\r\nimport {\r\n  colorFail,\r\n  colorPrimary,\r\n  colorSecondaryGradient, spacingX4, TIMES_ICON\r\n} from '../../styles/abstract/variables'\r\nimport { NormalPBold } from '../../styles/typography/typography'\r\nimport { isMobile } from 'react-device-detect'\r\n\r\nconst Wrapper = styled.div`\r\n  z-index: 99;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: center;\r\n  padding: 0 ${spacingX4};\r\n  position: relative;\r\n  height: 40px;\r\n  &:before{\r\n     content: '';\r\n     height: 100%;\r\n     width: 20px;\r\n     position: absolute;\r\n     left: 0;\r\n     background: ${colorSecondaryGradient};\r\n     ${props => props.error && `background: ${colorFail}`}\r\n     ${props => props.notification && `background: ${colorPrimary};`}\r\n  }\r\n`\r\n\r\nconst CloseWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: center;\r\n \r\n`\r\n\r\nexport function Toast({ errorMessage, message, error }) {\r\n  return (\r\n    <Wrapper error={error}>\r\n      {\r\n        error\r\n          ? <NormalPBold> {errorMessage}</NormalPBold>\r\n          : <NormalPBold> {message ? message : 'Success'}</NormalPBold>\r\n      }\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nfunction setToastStyle({ color }) {\r\n  return {\r\n    closeButton:\r\n      <CloseWrapper>\r\n        <i className={TIMES_ICON}/>\r\n      </CloseWrapper>,\r\n    transition: Slide,\r\n    draggable: false,\r\n    bodyClassName: css({\r\n      margin: '0!important',\r\n      display: 'flex',\r\n      flexFlow: 'column',\r\n      height: '100%',\r\n      justifyContent: 'center'\r\n\r\n    }),\r\n    className: css({\r\n      padding: '0!important',\r\n      display: 'flex',\r\n      borderRadius: !isMobile && '50px  0 0 50px !important',\r\n      minHeight: 'unset!important'\r\n    }),\r\n    progressClassName: css({\r\n      background: `${color}!important`,\r\n      height: `3px!important`\r\n    }),\r\n    style: css({\r\n      marginRight: '0!important'\r\n    }),\r\n    autoClose: 3000\r\n  }\r\n}\r\n\r\n\r\nexport const showSuccess = (message) => toast(<Toast\r\n  message={message}/>, setToastStyle({ color: colorSecondaryGradient }))\r\n//\r\n// export const showNotification = (message) => toast(<Toast notification message={message}/>, {\r\n//   closeButton: false,\r\n//   className: {\r\n//     padding: 0,\r\n//     background: 'transparent',\r\n//     borderRadius: '4px'\r\n//   },\r\n//   progressClassName: css({\r\n//     background: 'transparent'\r\n//   })\r\n// })\r\n"]},"metadata":{},"sourceType":"module"}