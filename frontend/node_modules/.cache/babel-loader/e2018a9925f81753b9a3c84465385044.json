{"ast":null,"code":"var _jsxFileName = \"/Users/emilian.radu/Developer/AIProject/frontend/src/components/Auth/AuthContext.js\";\nimport React from 'react';\nimport { GET_USER_SUCCESS, LOGOUT_SUCCESS, REQUEST_AUTH_TOKEN, REQUEST_AUTH_TOKEN_FAILED, UPDATE_USER_DETAILS_SUCCESS } from './AuthActions';\nimport moment from 'moment-timezone';\nimport { reducerPersistor, statePersister } from '../../helpers/contextPersistor';\nconst STORAGE_KEY = 'auth';\nconst initialState = {\n  access_token: undefined,\n  refresh_token: undefined,\n  expires_at: undefined,\n  token_type: '',\n  loggedIn: false,\n  errorLogin: false,\n  user: {}\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case GET_USER_SUCCESS:\n      return { ...state,\n        user: action.payload\n      };\n\n    case REQUEST_AUTH_TOKEN:\n      return { ...state,\n        accessToken: action.payload.accessToken,\n        expires_at: moment().add(action.payload.expiresIn, 'ms'),\n        loggedIn: true\n      };\n\n    case REQUEST_AUTH_TOKEN_FAILED:\n      return { ...state,\n        errorLogin: 'Error'\n      };\n\n    case LOGOUT_SUCCESS:\n      return { ...initialState\n      };\n\n    case UPDATE_USER_DETAILS_SUCCESS:\n      return { ...state,\n        users: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst AuthContext = React.createContext();\n\nfunction AuthContextProvider(props) {\n  const [state, dispatch] = React.useReducer(reducerPersistor(STORAGE_KEY, reducer), statePersister(STORAGE_KEY, initialState));\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, props.children);\n}\n\nconst AuthContextConsumer = AuthContext.Consumer;\nexport { AuthContext, AuthContextProvider, AuthContextConsumer };","map":{"version":3,"sources":["/Users/emilian.radu/Developer/AIProject/frontend/src/components/Auth/AuthContext.js"],"names":["React","GET_USER_SUCCESS","LOGOUT_SUCCESS","REQUEST_AUTH_TOKEN","REQUEST_AUTH_TOKEN_FAILED","UPDATE_USER_DETAILS_SUCCESS","moment","reducerPersistor","statePersister","STORAGE_KEY","initialState","access_token","undefined","refresh_token","expires_at","token_type","loggedIn","errorLogin","user","reducer","state","action","type","payload","accessToken","add","expiresIn","users","AuthContext","createContext","AuthContextProvider","props","dispatch","useReducer","children","AuthContextConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,gBADF,EAEEC,cAFF,EAGEC,kBAHF,EAIEC,yBAJF,EAKEC,2BALF,QAMO,eANP;AAOA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,gCAAjD;AAEA,MAAMC,WAAW,GAAG,MAApB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAEC,SADK;AAEnBC,EAAAA,aAAa,EAAED,SAFI;AAGnBE,EAAAA,UAAU,EAAEF,SAHO;AAInBG,EAAAA,UAAU,EAAE,EAJO;AAKnBC,EAAAA,QAAQ,EAAE,KALS;AAMnBC,EAAAA,UAAU,EAAE,KANO;AAOnBC,EAAAA,IAAI,EAAE;AAPa,CAArB;;AAUA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKrB,gBAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAFR,OAAP;;AAIF,SAAKpB,kBAAL;AACE,aAAM,EACJ,GAAGiB,KADC;AAEJI,QAAAA,WAAW,EAAEH,MAAM,CAACE,OAAP,CAAeC,WAFxB;AAGJV,QAAAA,UAAU,EAAER,MAAM,GAAGmB,GAAT,CAAaJ,MAAM,CAACE,OAAP,CAAeG,SAA5B,EAAuC,IAAvC,CAHR;AAIJV,QAAAA,QAAQ,EAAE;AAJN,OAAN;;AAOF,SAAKZ,yBAAL;AACI,aAAO,EACL,GAAGgB,KADE;AAELH,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIJ,SAAKf,cAAL;AACE,aAAO,EACL,GAAGQ;AADE,OAAP;;AAIF,SAAKL,2BAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELO,QAAAA,KAAK,EAAEN,MAAM,CAACE;AAFT,OAAP;;AAIF;AACE,aAAOH,KAAP;AA9BJ;AAgCD,CAjCD;;AAkCA,MAAMQ,WAAW,GAAG5B,KAAK,CAAC6B,aAAN,EAApB;;AAEA,SAASC,mBAAT,CAA8BC,KAA9B,EAAqC;AACnC,QAAM,CAACX,KAAD,EAAQY,QAAR,IAAoBhC,KAAK,CAACiC,UAAN,CAAiB1B,gBAAgB,CAACE,WAAD,EAAcU,OAAd,CAAjC,EAAyDX,cAAc,CAACC,WAAD,EAAcC,YAAd,CAAvE,CAA1B;AACA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEU,MAAAA,KAAF;AAASY,MAAAA;AAAT,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACG,QADT,CADF;AAKD;;AAED,MAAMC,mBAAmB,GAAGP,WAAW,CAACQ,QAAxC;AAEA,SAASR,WAAT,EAAsBE,mBAAtB,EAA2CK,mBAA3C","sourcesContent":["import React from 'react'\r\nimport {\r\n  GET_USER_SUCCESS,\r\n  LOGOUT_SUCCESS,\r\n  REQUEST_AUTH_TOKEN,\r\n  REQUEST_AUTH_TOKEN_FAILED,\r\n  UPDATE_USER_DETAILS_SUCCESS\r\n} from './AuthActions'\r\nimport moment from 'moment-timezone'\r\nimport { reducerPersistor, statePersister } from '../../helpers/contextPersistor'\r\n\r\nconst STORAGE_KEY = 'auth'\r\nconst initialState = {\r\n  access_token: undefined,\r\n  refresh_token: undefined,\r\n  expires_at: undefined,\r\n  token_type: '',\r\n  loggedIn: false,\r\n  errorLogin: false,\r\n  user: {}\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case GET_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      }\r\n    case REQUEST_AUTH_TOKEN:\r\n      return{\r\n        ...state,\r\n        accessToken: action.payload.accessToken,\r\n        expires_at: moment().add(action.payload.expiresIn, 'ms'),\r\n        loggedIn: true,\r\n\r\n      }\r\n    case REQUEST_AUTH_TOKEN_FAILED:\r\n        return {\r\n          ...state,\r\n          errorLogin: 'Error'\r\n        }\r\n    case LOGOUT_SUCCESS:\r\n      return {\r\n        ...initialState\r\n      }\r\n\r\n    case UPDATE_USER_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        users: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nconst AuthContext = React.createContext()\r\n\r\nfunction AuthContextProvider (props) {\r\n  const [state, dispatch] = React.useReducer(reducerPersistor(STORAGE_KEY, reducer), statePersister(STORAGE_KEY, initialState))\r\n  return (\r\n    <AuthContext.Provider value={{ state, dispatch }}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nconst AuthContextConsumer = AuthContext.Consumer\r\n\r\nexport { AuthContext, AuthContextProvider, AuthContextConsumer }\r\n"]},"metadata":{},"sourceType":"module"}